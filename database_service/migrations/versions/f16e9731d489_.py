"""empty message

Revision ID: f16e9731d489
Revises: 3abe4679e45f
Create Date: 2024-02-16 19:30:59.777471

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from alembic_utils.pg_materialized_view import PGMaterializedView
from sqlalchemy import text as sql_text

# revision identifiers, used by Alembic.
revision: str = 'f16e9731d489'
down_revision: Union[str, None] = '3abe4679e45f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    public_catalogue_book_materializedview = PGMaterializedView(
                schema="public",
                signature="catalogue_book_materializedview",
                definition="SELECT b.book_id, b.book_title, b.book_price, STRING_AGG(a.author_surname, ', ') AS authors\n    FROM books b\n    JOIN book_author_association ba ON b.book_id = ba.book_id\n    JOIN authors a ON ba.author_id = a.author_id\n    GROUP BY b.book_id, b.book_title, b.book_amount",
                with_data=True
            )
    op.replace_entity(public_catalogue_book_materializedview)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    public_catalogue_book_materializedview = PGMaterializedView(
                schema="public",
                signature="catalogue_book_materializedview",
                definition="SELECT b.book_id,\n    b.book_title,\n    b.book_price,\n    string_agg((a.author_name)::text, ', '::text) AS authors\n   FROM ((books b\n     JOIN book_author_association ba ON ((b.book_id = ba.book_id)))\n     JOIN authors a ON ((ba.author_id = a.author_id)))\n  GROUP BY b.book_id, b.book_title, b.book_amount",
                with_data=True
            )

    op.replace_entity(public_catalogue_book_materializedview)
    # ### end Alembic commands ###
